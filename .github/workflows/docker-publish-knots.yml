name: Docker Publish Knots

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to GHCR
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7

    steps:
    - name: Prepare
      run: |
        platform=${{ matrix.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ./docker/knots
        file: ./docker/knots/Dockerfile
        # Only push images to the registry on push events
        push: ${{ github.event_name == 'push' }}
        platforms: ${{ matrix.platform }}
        outputs: type=image,push-by-digest=true,name=ghcr.io/${{ github.repository_owner }}/knots,push=${{ github.event_name == 'push' }}
        build-args: |
          KNOTS_VERSION=28.1.knots20250305
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Export digest
      if: github.event_name == 'push'
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"

    - name: Upload digest
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1

  merge:
    needs: build
    if: github.event_name == 'push' # Only run on push events
    runs-on: ubuntu-latest
    permissions:
      packages: write # Needed to push to GHCR

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create and push manifest
        working-directory: ${{ runner.temp }}/digests
        run: |
          # Create and push the manifest for multi-arch support
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/knots:28.1.knots20250305 \
            $(printf 'ghcr.io/${{ github.repository_owner }}/knots@sha256:%s ' *)

          # Also create latest tag
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/knots:latest \
            $(printf 'ghcr.io/${{ github.repository_owner }}/knots@sha256:%s ' *)

  sign-image:
    needs: merge
    if: github.event_name == 'push' # Only run on push events
    runs-on: ubuntu-latest
    permissions:
      packages: write # Needed to push signature to GHCR
      id-token: write # Needed for keyless signing with Cosign/Sigstore

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3 # Use the latest version

      - name: Sign the multi-arch image
        env:
          COSIGN_EXPERIMENTAL: "true" # Enable keyless signing
        run: |
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/knots:28.1.knots20250305
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/knots:latest